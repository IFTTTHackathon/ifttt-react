{"version":3,"sources":["logo.svg","AppStyles.js","Components/CreationForm.js","Components/Sentence.js","Screens/CreateScreen.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AppStyles","button","backgroundColor","color","fontSize","border","borderRadius","marginRight","CreationForm","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","console","log","stage","renderTemperature","renderMainAction","renderActionValue","renderMainCategories","_this","react_default","a","createElement","defaultValue","onChange","submitChanges","value","disabled","_this2","style","width","display","textAlign","size","type","onClick","_this3","_this4","event","onSelected","target","onSubmit","Component","Sentence","segments","conditions","map","item","textFor","text","split","segmentViews","i","length","push","fontWeight","cursor","height","verticalAlign","boxShadow","marginTop","answer","key","CreateScreen","state","formShown","options","addedText","Durchschnittstemperatur","complete","self","assertThisInitialized","interval","setInterval","axios","get","then","response","data","trigger","addValue","delay","count","delayed","newValue","document","getElementById","innerText","formattedValue","parseInt","substr","newBankValue","formattedBankValue","setTimeout","clearInterval","inputComp","Components_CreationForm","bind","Components_Sentence","currentConditions","answered","nextUnanswered","setState","filter","cond","unanswered","nextStage","showWennDannBox","wennDannTempBox","getElementsByClassName","App","className","Screens_CreateScreen","src","logo","alt","href","rel","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0cb4de69.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","var AppStyles = {\n    button: {\n        backgroundColor: '#fff',\n        color: '#666',\n        fontSize: '21px',\n        border: '2px solid #666',\n        borderRadius: '5px',\n        marginRight: '5px'\n    }\n};\n\nexport default AppStyles;","import React, { Component } from 'react';\nimport AppStyles from '../AppStyles';\n\nclass CreationForm extends Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        console.log(this.props.stage);\n\n        if(this.props.stage === \"temperature\")\n            return this.renderTemperature();\n        if(this.props.stage === \"action\")\n            return this.renderMainAction();\n        if(this.props.stage === \"actionValue\")\n            return this.renderActionValue();\n\n        return this.renderMainCategories();\n    }\n    renderMainCategories() {\n        return (\n            <div>\n                <select defaultValue=\"\" onChange={() => this.submitChanges(\"categories\")}>\n                    <option value=\"\" disabled>Auswahl</option>\n                    <option value=\"zahlungseingang\">Zahlungseingang</option>\n                    <option value=\"kontostand\">Kontostand</option>\n                    <option value=\"temperatur\">Temperatur</option>\n                    <option value=\"ausgaben\">Ausgaben</option>\n                    <option value=\"kaufverhalten\">Kaufverhalten</option>\n                </select>\n            </div>\n        );\n    }\n\n    renderTemperature() {\n        return (\n            <div>\n                <select value=\"temperatur\" defaultValue=\"temperatur\">\n                    <option value=\"temperatur\">Temperatur</option>\n                </select>\n                <div style={{width: '5px', display: 'inline-block'}}></div>\n                <select defaultValue=\"\">\n                    <option value=\"\" disabled>Vergleich</option>\n                    <option value=\"Niedriger als\">Niedriger als</option>\n                    <option value=\"Höher als\">Höher als</option>\n                </select>\n                <div style={{width: '5px', display: 'inline-block'}}></div>\n                <input style={{textAlign: 'right'}} size=\"2\" type=\"text\"></input>\n                <span>°C</span>\n                <div style={{width: '5px', display: 'inline-block'}}></div>\n                <button style={AppStyles.button} onClick={() => this.submitChanges(\"temperature\")}>OK</button>\n            </div>\n        );\n    }\n\n    renderMainAction() {\n        return (\n            <div>\n                <select defaultValue=\"\" onChange={() => this.submitChanges(\"mainAction\")}>\n                    <option value=\"\" disabled>Auswahl</option>\n                    <option value=\"ueberweise\">Überweise</option>\n                    <option value=\"sparen\">Spare</option>\n                    <option value=\"kontostand\">Benachrichtige</option>\n                </select>\n            </div>\n        );\n    }\n\n    renderActionValue() {\n        return (\n            <div>\n                <select value=\"spare\">\n                    <option value=\"spare\">Spare</option>\n                </select>\n                <div style={{width: '5px', display: 'inline-block'}}></div>\n                <input style={{textAlign: 'right'}} size=\"2\" type=\"text\"></input>\n                <span>EUR</span>\n                <div style={{width: '5px', display: 'inline-block'}}></div>\n                <button style={AppStyles.button} onClick={() => this.submitChanges(\"actionValue\")}>OK</button>\n            </div>\n        );\n    }\n\n    selectionChanged(event) {\n        this.props.onSelected(event.target.value);\n    }\n\n    submitChanges(value) {\n        this.props.onSubmit(value);\n    }\n\n}\n\nexport default CreationForm;","import React, { Component } from 'react';\n\nclass Sentence extends Component {\n    constructor(props) {\n        super(props);        \n    }\n    render() {\n        const conditionComponents = this.props.conditions.map(item => \n            this.textFor(item)\n        );\n        const segments = this.props.text.split('##');\n        var segmentViews = [];\n        var borderStyle = '2px solid red';\n        for(var i = 0; i < segments.length; i++) {\n            segmentViews.push(<span style={{fontWeight: 'normal'}}>{segments[i]}</span>);\n            if(i < segments.length - 1 ) {\n                segmentViews.push(\n                <div \n                    style={{\n                        display: 'inline-block', \n                        backgroundColor: '#fff', \n                        border: borderStyle,\n                        cursor: 'pointer', \n                        width: '100px', \n                        height: '25px', \n                        verticalAlign: 'center',\n                        borderRadius: '5px',\n                        boxShadow: '2px 2px 2px 2px rgba(0,0,0,0.2)',\n                        marginRight: '5px'\n                    }}>\n                </div>);\n            }\n        }\n        \n        return (\n            <div style={{marginTop: '20px', fontSize: '1.5em'}}>\n                {segmentViews}\n            </div>\n        );\n    }\n\n    textFor(item) {\n        if(item.answer || item.text) {\n            const text = item.text ? item.text : item.answer;\n            return (<span key={item}>{text} </span>);\n        }\n        return <div style={{display: 'inline-block', backgroundColor: '#aaa', border: '2px solid #333', cursor: 'pointer', width: '80px', height: '20px', verticalAlign: 'middle'}} key=\"gap\"></div>;\n    }\n}\n\nexport default Sentence;","import React, { Component } from 'react';\nimport CreationForm from '../Components/CreationForm.js';\nimport Sentence from '../Components/Sentence.js';\nimport SubmitButton from '../Components/SubmitButton.js';\nimport axios from 'axios';\n\nclass CreateScreen extends Component {\n    constructor(props) {\n        super(props);\n\n        const conditions = [\n            {\n                options: [\"Zahlungseingang\", \"Kontostand\", \"Temperatur\", \"Montsausgaben\"],\n                answer: null,\n                text: null,\n                addedText: {Durchschnittstemperatur: 'die monatliche Durchschnittstemperatur'},                \n            }\n        ];\n\n        this.state = {\n            formShown: true,\n            conditions: conditions,\n            complete: false,\n            text: \"Wenn ##, Dann ##\"\n        };\n\n        var self = this;\n        this.state.interval = setInterval(function(){\n            if (self.state.complete === false) {\n                return;\n            }\n\n            axios.get('https://rest.ifttt.bnjmnrtl.com/hackrest/trigger?temp=28')\n                .then(function (response) {\n                    if (response.data.trigger === true) {\n                        return;\n                    }\n\n                    var addValue = 50;\n\n                    var delay = 50, count = 0;\n                    function delayed () {\n                        count += 1;\n\n                        var newValue = document.getElementById('saved-amount').innerText;\n                        var intValue = parseInt(newValue) + 1;\n                        var formattedValue = ('000000000' + intValue).substr(-3);\n                        document.getElementById('saved-amount').innerText = formattedValue;\n\n                        var newBankValue = document.getElementById('bank-amount').innerText;\n                        var intBankValue = parseInt(newBankValue) - 1;\n                        var formattedBankValue = ('000000000' + intBankValue).substr(-3);\n                        document.getElementById('bank-amount').innerText = formattedBankValue;\n\n                        if (count < addValue) {\n                            setTimeout(delayed, delay);\n                        } else {\n                            clearInterval(self.state.interval);\n                        }\n                    }\n                    delayed();\n                });\n        }, 5000);\n\n    }\n\n    render() {\n        const inputComp = this.state.complete ? \n                          '' : <CreationForm stage={this.state.stage} onSubmit={this.onSubmit.bind(this)}/>;\n        return (\n            <div>\n                {inputComp}\n                <Sentence text={this.state.text} conditions={this.state.conditions}/>\n            </div>\n        );\n    }\n\n    onSelected(value) {\n        var currentConditions = this.state.conditions;\n        var answered = this.nextUnanswered();\n        answered.answer = value;\n        answered.text = answered.addedText[value];\n        \n        this.setState({\n            conditions: currentConditions\n        });\n\n        const complete = this.state.conditions.filter(cond => !cond.answer).length < 1;\n        this.setState({complete: complete});\n    }\n\n    nextUnanswered() {\n        const unanswered = this.state.conditions.filter(cond => !cond.answer);\n        return unanswered ? unanswered[0] : null;\n    }\n\n    onSubmit(value) {\n        var text = \"\";\n        var nextStage = \"\";\n        switch(value) {\n            case \"categories\":\n                text = \"Wenn die Temperatur ## als ##°C, dann ##\";\n                nextStage = \"temperature\";\n                break;\n            case \"temperature\":\n                text = \"Wenn die Temperatur höher als 28°C, dann ##\";\n                nextStage = \"action\";\n                break;\n            case \"mainAction\":\n                text = \"Wenn die Temperatur höher als 28°C, dann spare ##€\";\n                nextStage = \"actionValue\";\n                break;\n            case \"actionValue\":\n                text = \"\";\n                nextStage = \"completeSentence\";\n                this.setState({\n                    complete: true\n                });\n                this.showWennDannBox();\n                break;\n        }\n        this.setState({\n            text: text,\n            stage: nextStage\n        });\n    }\n\n    showWennDannBox() {\n        var wennDannTempBox = document.getElementsByClassName(\"wenn-dann-temp\");\n        wennDannTempBox[0].style = 'display: block; background-color: beige; height: 113px;';\n\n        setTimeout(function(){\n            wennDannTempBox[0].style = 'display: block; background-color: transparent; height: 113px;';\n        }, 4000);\n    }\n}\n\nexport default CreateScreen;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport CreateScreen from './Screens/CreateScreen';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <CreateScreen />\n      </div>\n    )\n  }\n  renderOld() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}