{"version":3,"sources":["logo.svg","Components/CreationForm.js","Components/Sentence.js","Screens/CreateScreen.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CreationForm","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","console","log","stage","renderTemperature","renderMainAction","renderActionValue","renderMainCategories","_this","react_default","a","createElement","defaultValue","onChange","submitChanges","value","disabled","_this2","style","textAlign","size","type","marginLeft","onClick","_this3","_this4","event","onSelected","target","onSubmit","Component","Sentence","segments","conditions","map","item","textFor","text","split","segmentViews","i","length","push","fontWeight","display","backgroundColor","border","cursor","width","height","verticalAlign","marginTop","fontSize","answer","key","CreateScreen","state","formShown","options","addedText","Durchschnittstemperatur","complete","self","assertThisInitialized","interval","setInterval","axios","get","then","addValue","delay","count","delayed","newValue","document","getElementById","innerText","formattedValue","parseInt","substr","newBankValue","formattedBankValue","setTimeout","clearInterval","inputComp","Components_CreationForm","bind","Components_Sentence","currentConditions","answered","nextUnanswered","setState","filter","cond","unanswered","nextStage","App","className","Screens_CreateScreen","src","logo","alt","href","rel","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.423176c9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\n\nclass CreationForm extends Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        console.log(this.props.stage);\n\n        if(this.props.stage === \"temperature\")\n            return this.renderTemperature();\n        if(this.props.stage === \"action\")\n            return this.renderMainAction();\n        if(this.props.stage === \"actionValue\")\n            return this.renderActionValue();\n\n        return this.renderMainCategories();\n    }\n    renderMainCategories() {\n        return (\n            <div>\n                <select defaultValue=\"\" onChange={() => this.submitChanges(\"categories\")}>\n                    <option value=\"\" disabled>Auswahl</option>\n                    <option value=\"zahlungseingang\">Zahlungseingang</option>\n                    <option value=\"kontostand\">Kontostand</option>\n                    <option value=\"temperatur\">Temperatur</option>\n                    <option value=\"ausgaben\">Ausgaben</option>\n                    <option value=\"kaufverhalten\">Kaufverhalten</option>\n                </select>\n            </div>\n        );\n    }\n\n    renderTemperature() {\n        return (\n            <div>\n                <select value=\"temperatur\" defaultValue=\"temperatur\">\n                    <option value=\"temperatur\">Temperatur</option>\n                </select>\n                <select defaultValue=\"\">\n                    <option value=\"\" disabled>Vergleich</option>\n                    <option value=\"Niedriger als\">Niedriger als</option>\n                    <option value=\"Höher als\">Höher als</option>\n                </select>\n                <input style={{textAlign: 'right'}} size=\"2\" type=\"text\"></input>\n                <span>°C</span>\n                <button style={{marginLeft: '5px'}} onClick={() => this.submitChanges(\"temperature\")}>OK</button>\n            </div>\n        );\n    }\n\n    renderMainAction() {\n        return (\n            <div>\n                <select defaultValue=\"\" onChange={() => this.submitChanges(\"mainAction\")}>\n                    <option value=\"\" disabled>Auswahl</option>\n                    <option value=\"ueberweise\">Überweise</option>\n                    <option value=\"investiere\">Investiere</option>\n                    <option value=\"kontostand\">Benachrichtige</option>\n                </select>\n            </div>\n        );\n    }\n\n    renderActionValue() {\n        return (\n            <div>\n                <select value=\"investiere\">\n                    <option value=\"investiere\">Investiere</option>\n                </select>\n                <input style={{textAlign: 'right'}} size=\"2\" type=\"text\"></input>\n                <span>EUR</span>\n                <button onClick={() => this.submitChanges(\"actionValue\")}>OK</button>\n            </div>\n        );\n    }\n\n    selectionChanged(event) {\n        this.props.onSelected(event.target.value);\n    }\n\n    submitChanges(value) {\n        this.props.onSubmit(value);\n    }\n\n}\n\nexport default CreationForm;","import React, { Component } from 'react';\n\nclass Sentence extends Component {\n    constructor(props) {\n        super(props);        \n    }\n    render() {\n        const conditionComponents = this.props.conditions.map(item => \n            this.textFor(item)\n        );\n        const segments = this.props.text.split('##');\n        var segmentViews = [];\n        var borderStyle = '2px solid red';\n        for(var i = 0; i < segments.length; i++) {\n            segmentViews.push(<span style={{fontWeight: 'normal'}}>{segments[i]}</span>);\n            if(i < segments.length - 1 ) {\n                segmentViews.push(<div style={{display: 'inline-block', backgroundColor: '#fff', border: borderStyle, cursor: 'pointer', width: '80px', height: '20px', verticalAlign: 'center'}}></div>);\n            }\n        }\n        \n        return (\n            <div style={{marginTop: '10px', fontSize: '1.5em'}}>\n                {segmentViews}\n            </div>\n        );\n    }\n\n    textFor(item) {\n        if(item.answer || item.text) {\n            const text = item.text ? item.text : item.answer;\n            return (<span key={item}>{text} </span>);\n        }\n        return <div style={{display: 'inline-block', backgroundColor: '#aaa', border: '2px solid #333', cursor: 'pointer', width: '80px', height: '20px', verticalAlign: 'middle'}} key=\"gap\"></div>;\n    }\n}\n\nexport default Sentence;","import React, { Component } from 'react';\nimport CreationForm from '../Components/CreationForm.js';\nimport Sentence from '../Components/Sentence.js';\nimport SubmitButton from '../Components/SubmitButton.js';\nimport axios from 'axios';\n\nclass CreateScreen extends Component {\n    constructor(props) {\n        super(props);\n\n        const conditions = [\n            {\n                options: [\"Zahlungseingang\", \"Kontostand\", \"Temperatur\", \"Montsausgaben\"],\n                answer: null,\n                text: null,\n                addedText: {Durchschnittstemperatur: 'die monatliche Durchschnittstemperatur'},                \n            }\n        ];\n\n        this.state = {\n            formShown: true,\n            conditions: conditions,\n            complete: false,\n            text: \"Wenn ##, Dann ##\"\n        };\n\n        var self = this;\n        this.state.interval = setInterval(function(){\n            if (self.state.complete === false) {\n                return;\n            }\n\n            axios.get('https://rest.ifttt.bnjmnrtl.com/hackrest/trigger?temp=25')\n                .then(function () {\n                    var addValue = 50;\n\n                    var delay = 50, count = 0;\n                    function delayed () {\n                        count += 1;\n\n                        var newValue = document.getElementById('saved-amount').innerText;\n                        var intValue = parseInt(newValue) + 1;\n                        var formattedValue = ('000000000' + intValue).substr(-3);\n                        document.getElementById('saved-amount').innerText = formattedValue;\n                        document.getElementById('saved-amount-sum').innerText = formattedValue;\n\n                        var newBankValue = document.getElementById('bank-amount').innerText;\n                        var intBankValue = parseInt(newBankValue) - 1;\n                        var formattedBankValue = ('000000000' + intBankValue).substr(-3);\n                        document.getElementById('bank-amount').innerText = formattedBankValue;\n\n                        if (count < addValue) {\n                            setTimeout(delayed, delay);\n                        } else {\n                            clearInterval(self.state.interval);\n                        }\n                    }\n                    delayed();\n                });\n        }, 5000);\n\n    }\n\n    render() {\n        const inputComp = this.state.complete ? \n                          '' : <CreationForm stage={this.state.stage} onSubmit={this.onSubmit.bind(this)}/>;\n        return (\n            <div>\n                {inputComp}\n                <Sentence text={this.state.text} conditions={this.state.conditions}/>\n            </div>\n        );\n    }\n\n    onSelected(value) {\n        var currentConditions = this.state.conditions;\n        var answered = this.nextUnanswered();\n        answered.answer = value;\n        answered.text = answered.addedText[value];\n        \n        this.setState({\n            conditions: currentConditions\n        });\n\n        const complete = this.state.conditions.filter(cond => !cond.answer).length < 1;\n        this.setState({complete: complete});\n    }\n\n    nextUnanswered() {\n        const unanswered = this.state.conditions.filter(cond => !cond.answer);\n        return unanswered ? unanswered[0] : null;\n    }\n\n    onSubmit(value) {\n        var text = \"\";\n        var nextStage = \"\";\n        switch(value) {\n            case \"categories\":\n                text = \"Wenn die Temperatur ## als ##°C, dann ##\";\n                nextStage = \"temperature\";\n                break;\n            case \"temperature\":\n                text = \"Wenn die Temperatur höher als 25°C, dann ##\";\n                nextStage = \"action\";\n                break;\n            case \"mainAction\":\n                text = \"Wenn die Temperatur höher als 25°C, dann investiere ##€\";\n                nextStage = \"actionValue\";\n                break;\n            case \"actionValue\":\n                text = \"Wenn die Temperatur höher als 25°C, dann investiere 50€\";\n                nextStage = \"completeSentence\";\n                this.setState({\n                    complete: true\n                });\n                // this.changeDekaBalance();\n                break;\n        }\n        this.setState({\n            text: text,\n            stage: nextStage\n        });\n    }\n\n    // changeDekaBalance() {\n    //     document.getElementById(\"deka_balance\").innerHTML = \"90.050\";\n    //     document.getElementById(\"total_balance\").innerHTML = \"91.050\";\n    // }\n}\n\nexport default CreateScreen;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport CreateScreen from './Screens/CreateScreen';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <CreateScreen />\n      </div>\n    )\n  }\n  renderOld() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}